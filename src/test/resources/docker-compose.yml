version: "3.7"
services:
  aggregate-trace:
    image: "ianitrix/kafka-tracing-aggregator:latest"
    hostname: aggregate-trace
    environment:
      - "KAFKATRACE_BOOTSTRAP_SERVERS=kafka:9092"
      - "KAFKATRACE_APPLICATION_ID=_aggregator-trace-stream-docker"
    networks:
      - elastic

  elasticsearch:
    image: "elasticsearch:${ELASTIC_VERSION}"
    hostname: elasticsearch
    ports:
      - 9200:9200
    healthcheck:
      test: test `curl -s -o /dev/null -w "%{http_code}" http://localhost:9200/_cluster/health` = 200
      interval: 2s
      timeout: 2s
      retries: 10
      start_period: 2s
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=elasticsearch
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    networks:
      - elastic

  metricbeat:
    image: "docker.elastic.co/beats/metricbeat:${ELASTIC_VERSION}"
    hostname: metricbeat
    environment:
      - output.elasticsearch.hosts=["elasticsearch:9200"]
    volumes:
      - ./metricbeat/prometheus.yml:/usr/share/metricbeat/modules.d/prometheus.yml:ro
      - ./metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
      - ./metricbeat/customfield.yml:/usr/share/metricbeat/customfield.yml:ro
    networks:
      - elastic
    depends_on:
      - elasticsearch
      - aggregate-trace

  kibana:
    image: "kibana:${ELASTIC_VERSION}"
    hostname: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - elastic

  kafka-connect:
    image: "ianitrix/kafka:${CONFLUENT_VERSION}"
    command: connect-distributed
    hostname: kafka-connect
    ports:
      - 8083:8083
    networks:
      - elastic
    healthcheck:
      test: test `curl -s -o /dev/null -w "%{http_code}" http://localhost:8083/connectors` = 200
      interval: 2s
      timeout: 2s
      retries: 10
      start_period: 2s
    environment:
      - KAFKA_OPTS=-Xms512m -Xmx512m
      - KAFKA_bootstrap_servers=kafka:9092
      - KAFKA_rest_port=8083
      - KAFKA_group_id=connect
      - KAFKA_config_storage_topic=_connect-config
      - KAFKA_offset_storage_topic=_connect-offsets
      - KAFKA_status_storage_topic=_connect-status
      - KAFKA_replication_factor=1
      - KAFKA_config_storage_replication_factor=1
      - KAFKA_offset_storage_replication_factor=1
      - KAFKA_status_storage_replication_factor=1
      - KAFKA_key_converter=org.apache.kafka.connect.json.JsonConverter
      - KAFKA_value_converter=org.apache.kafka.connect.json.JsonConverter
      - KAFKA_key_converter_schemas_enable=false
      - KAFKA_value_converter_schemas_enable=false
      - KAFKA_internal_key_converter=org.apache.kafka.connect.json.JsonConverter
      - KAFKA_internal_value_converter=org.apache.kafka.connect.json.JsonConverter
      - KAFKA_rest_advertised_host_name=kafka-connect
      - KAFKA_plugin_path=/confluent-${CONFLUENT_VERSION}/share/java
      - KAFKA_log4j_root_loglevel=INFO
      - KAFKA_log4j_loggers=org.reflections=ERROR
    restart: on-failure

  load-es-connector-trace:
    image: "curlimages/curl:7.69.0"
    hostname: curl
    entrypoint:
      - "/deployConnector.sh"
      - "http://kafka-connect:8083"
      - ""
      - "body.json"
    depends_on:
      - kafka-connect
      - elasticsearch
    networks:
      - elastic
    restart: on-failure
    volumes:
      - ./dataTest/deployConnector.sh:/deployConnector.sh:ro
      - ./dataTest/connectorTrace.json:/body.json:ro

  load-es-connector-raw:
    image: "curlimages/curl:7.69.0"
    hostname: curl
    entrypoint:
      - "/deployConnector.sh"
      - "http://kafka-connect:8083"
      - ""
      - "body.json"
    depends_on:
      - kafka-connect
      - elasticsearch
    networks:
      - elastic
    restart: on-failure
    volumes:
      - ./dataTest/deployConnector.sh:/deployConnector.sh:ro
      - ./dataTest/connectorRawTrace.json:/body.json:ro

  load-kibana-dashboard:
    image: "curlimages/curl:7.69.0"
    hostname: curl
    entrypoint:
      - "/deployDashboard.sh"
      - "http://kibana:5601"
      - "/kibana.ndjson"
    depends_on:
      - kibana
    networks:
      - elastic
    restart: on-failure
    volumes:
      - ./dataTest/deployDashboard.sh:/deployDashboard.sh:ro
      - ./dataTest/kibana.ndjson:/kibana.ndjson:ro

networks:
  elastic:
    external:
      name: confluent

